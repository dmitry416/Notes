Было сделано:
Вся визуальная часть проекта
Все функции проекта

Было добавлено:
Дополнительная вкладка для работы с csv
Возможность работать с csv файлами

Было использовано:
SQL для работы с БД
Hashlib для получения хэша
pyzipper для архивирования и разархивирования zip файла с паролем
PyQT для визуальной части проекта

Краткое описание работы проекта

Класс Account
	Содержит Логин, Пароль и Соль для удобного использования этих данных в проекте

Класс HelpfulMethods
	Имеет только статичные методы для удобного использования в проекте
	Методы
		get_id(login, password) Получить id пользователя
		is_correct_password(password) Проверка на правильность пароля
		throw_message(title, text, buttons=False) Создаёт окно с сообщением
		get_hash(salt, text) Получает хэш
		make_zip(name, password, delete=False) Создаёт zip файл с паролем
		make_unzip(name, password) Распаковывает zip файл с паролем

Класс LoginForm
	Форма для входа в аккаунт
	Методы
		__init__() К каждой кнопке присоединяется свой метод
		enterMethod() Метод кнопки Войти
		wrongPassword() Появляется сообщение о неверном логине или пароле
		createMethod() Метод кнопки Создать
		openMainWindow(id) Открывается главная форма и передаётся id аккаунта

Класс MainForm
	Основная форма
	Методы
		__init__(id) К каждой кнопке присоединяется свой метод
		createTableMethod() Метод кнопки Создать таблицу
		saveTableMethod() Метод кнопки Сохранить таблицу
		deleteMethod() Метод кнопки Удалить
		updateScroll() Метод обновления поля с кнопками
		fileButtonBehaviour() Метод, определяющий поведения кнопки после клика
		saveMethod() Метод кнопки Сохранить
		leaveMethod(delete=False) Метод выхода из аккаунта
		changeLoginMethod() Метод кнопки Изменить логин
		changePasswordMethod() Метод кнопки Изменить пароль
		deleteAccountMethod() Метод кнопки Удалить аккаунт

if __name__ == '__main__'
	Открывается LoginForm и отлавливаются любые ошибки для того, чтобы в любом случае данные были заархивированы